name: Build & Test
on: push
jobs:
  build-push-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build the backend
        run: docker-compose up -d --build
      - name: Smoke test internal connectivity
        # Find container name before running curl in network
        run: docker run --network "container:$(docker ps -a --format '{{.Names}}' | grep 'cinema-system_api' | head -1)"
          appropriate/curl -s --retry 10 --retry-connrefused http://localhost:5000/status
        env:
          DOCKER_USERNAME: ${{ secrets.dockerHubUsername }}
          DOCKER_PASSWORD: ${{ secrets.dockerHubPassword }}
        # TODO write integration tests with nginx
      - name: Log into docker hub
        env:
          DOCKER_USERNAME: ${{ secrets.dockerHubUsername }}
          DOCKER_PASSWORD: ${{ secrets.dockerHubPassword }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Push compose containers
        run: docker-compose push
  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install flake8
        run: python3 -m pip install flake8
      - name: Run flake8
        run: python3 -m flake8 --show-source --statistics
        working-directory: ./api
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache node modules via yarn.lock
        uses: actions/cache@v1
        with:
          path: app/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install dependencies
        working-directory: ./app
        run: yarn install
      - name: Build
        working-directory: ./app
        run: yarn run build
  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache node modules via yarn.lock
        uses: actions/cache@v1
        with:
          path: app/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install dependencies
        working-directory: ./app
        run: yarn install
      - name: Lint
        working-directory: ./app
        run: yarn run lint
