@import "../scss/util";
@import "../scss/theme";
@import "../scss/media";

.nav {
    padding-left: 1rem !important;
}

.layout {
    &--nav {
        @include dark(box-shadow, $drop-shadow);
        position: relative;

        // Above modal
        z-index: 1051;

        .right-buttons {
            display: flex;
            flex-direction: row;
            align-items: stretch;
            justify-content: flex-end;

            margin-left: auto;
        }

        .brand {
            $collapse-breakpoint: 400px;

            @include transitions("background-color, box-shadow");
            display: flex;
            flex-direction: row;
            align-items: center;
            border-radius: 0.35rem;
            color: rgba($-light, 0.8) !important;
            margin-left: -0.4rem;
            margin-right: -0.4rem;

            .brand--icon {
                font-size: 2.2rem;
                color: $-light;
                top: -6px;

                @include respond-below(md) {
                    font-size: 1.8rem;
                }

                @media (max-width: $collapse-breakpoint) {
                    font-size: 1.6rem;
                }
            }

            .brand--text {
                @include transitions("color");
                margin-bottom: 0;
                margin-top: 0;
                margin-left: 1rem;
                font-size: 1.1em;
                font-weight: 400;
                color: inherit;

                @media (max-width: $collapse-breakpoint) {
                    display: none;
                }
            }

            &:hover {
                color: $-light !important;
                background-color: rgba($-dark, 0.1);
                box-shadow: $drop-shadow-inner;
            }
        }

        a,
        button {
            @extend %button-blank;

            font-size: 1.5rem;
            @include transitions("color");
            color: rgba(white, 0.4);

            &:hover,
            &:active {
                color: white;
            }

            padding-left: 0.6rem;
            padding-right: 0.6rem;

            span {
                position: relative;
                top: -2px;
            }
        }

        .nav-divider {
            border-left: 2px solid rgba($-light, 0.25);
            margin-left: 0.5rem;
            margin-right: 0.5rem;
            margin-top: 0.2rem;
            margin-bottom: 0.2rem;

            @include respond-below(xs) {
                display: none;
            }
        }
    }
}

.cta-button.cta-button {
    @include transitions((box-shadow, background-color));
    $this: ".cta-button";

    border-radius: 768px;
    padding: 0.3em 1.5em 0.5em;
    font-size: 1.5em;
    cursor: pointer;
    user-select: none;

    @include respond-below(md) {
        font-size: 1.2em !important;
    }

    #{$this}--content {
        display: inline-flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        justify-content: center;
    }

    #{$this}--icon {
        margin-left: 1rem;
    }

    &#{$this}__animated {
        #{$this}--icon {
            @include transitions((margin-left, margin-right, opacity, width));
            opacity: 1;
            width: 0;
        }

        &:not(:hover) {
            #{$this}--icon {
                margin-left: 0 !important;
                margin-right: 0 !important;
                width: 0 !important;
                opacity: 0;
                overflow: hidden;
            }
        }
    }

    &#{$this}__reversed {
        flex-direction: row-reverse;

        #{$this}--icon {
            margin-left: 0;
            margin-right: 1rem;
        }
    }

    &#{$this}__glowing {
        @each $name, $color in $theme-colors {
            $base-drop-shadow: 0 6px 16px rgba($color, 0.3);

            &.btn-#{$name} {
                box-shadow: $base-drop-shadow;

                &:not(:disabled):not(.disabled):focus {
                    box-shadow: highlight-shadow-value($color, 0.2),
                        $base-drop-shadow;
                }

                &:not(:disabled):not(.disabled):active {
                    box-shadow: highlight-shadow-value($color, 0.2),
                        inset 0 3px 5px rgba(0, 0, 0, 0.125), $base-drop-shadow;
                }
            }
        }
    }
}

.lead {
    margin-bottom: 2rem;
}

._form {
    $this: &;
    #{$this}--buttons {
        display: flex;
        flex-direction: row;
        justify-content: flex-end;

        .btn {
            padding-left: 1.5rem;
            padding-right: 1.5rem;
            flex-grow: 1;
            flex-shrink: 1;
            max-width: 140px;

            &:not(:last-child) {
                margin-right: 1.25rem;
            }
        }

        #{$this}--submit-button {
            #{$this}--submit-button-spinner {
                @include transitions((width, opacity, margin-left));
                margin-left: 0;
                opacity: 0;
                position: relative;
                top: -1px;
                display: inline-block;
                width: 0;
            }

            &#{$this}--submit-button__loading {
                cursor: not-allowed;

                #{$this}--submit-button-spinner {
                    opacity: 1;
                    margin-left: 0.75rem;
                    width: 1rem;
                }
            }
        }
    }

    .form-group.row {
        &:last-child {
            margin-bottom: 0 !important;
        }
    }
}

.card {
    @include dark-bg($dark-400);
    @include light-bg($light-450);

    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: $drop-shadow;
}

.set-input {
    $this: &;
    @include transitions("box-shadow");

    border-radius: 8px;
    border: 1px solid rgba(#ced4da, 0.5);

    @include light {
        &.disabled {
            color: rgba($-dark, 0.8) !important;
        }
    }

    @include dark {
        border-color: transparent;

        &.disabled {
            color: rgba($-light, 0.8) !important;
            border-color: $dark-200;
            cursor: not-allowed;
        }
    }

    &.disabled {
        #{$this}--item {
            opacity: 0.6;
            pointer-events: none;
        }

        #{$this}--add {
            opacity: 0.6;
            pointer-events: none;
            cursor: not-allowed;
        }
    }

    &--items-pane {
        position: relative;
        min-height: 38px;
        padding: 0.5rem 0.5rem 0.05rem;
        display: flex;
        flex-wrap: wrap;

        border-bottom: 1px solid rgba(#ced4da, 0.5);
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;

        @include light {
            background-color: $light-350 !important;
            color: $-dark;
        }

        @include dark {
            background-color: color-adjust($-dark, 2%) !important;
            border-color: rgba($light-400, 0.1);
            color: $-light;
        }
    }

    &--input {
        display: flex;
        flex-direction: row;
        position: relative;
        z-index: 2;

        .auto-complete-input {
            &:not(.is-valid):not(.is-invalid) {
                .react-autosuggest__suggestions-container {
                    &::after {
                        border: none !important;
                    }
                }
            }

            .react-autosuggest__suggestions-container {
                &::after {
                    // top: -36px !important;
                    border-top-right-radius: 0 !important;
                    border-top-left-radius: 0 !important;
                }

                &:not(.react-autosuggest__suggestions-container--open)::after {
                    border-bottom-right-radius: 0 !important;
                }
            }
        }

        input {
            border-radius: 0 !important;
            border-bottom-left-radius: 8px !important;

            &.form-control:not(.is-valid):not(.is-invalid) {
                border: none !important;
            }
        }

        button {
            border-radius: 0;
            border-bottom-right-radius: 8px;
            border-right: none !important;
            border-top: none !important;
            border-bottom: none !important;
            flex-grow: 0;

            &::after {
                display: none !important;
            }
        }

        & > :not(button) {
            flex-grow: 1;
        }
    }

    &--item {
        @include transitions("box-shadow, transform");
        @extend %button-blank;
        $this: &;

        display: inline-flex;
        position: relative;
        flex-direction: row;
        align-items: center;
        padding: 0.25rem 0.25rem 0.25rem 0.5rem;
        margin-bottom: 0.5rem;
        margin-right: 0.5rem;
        max-width: 100%;

        border-radius: 6px;
        color: $-light;
        background-color: $-primary;
        cursor: pointer;
        will-change: transform;
        transform: none;

        @include light {
            &:focus {
                box-shadow: highlight-shadow-value($-primary) !important;

                &:hover {
                    box-shadow: highlight-shadow-value($-primary), $drop-shadow !important;
                }
            }
        }

        @include dark {
            background-color: rgba($-light, 0.1) !important;

            &:focus {
                box-shadow: highlight-shadow-value($-light) !important;

                &:hover {
                    box-shadow: highlight-shadow-value($-light), $drop-shadow !important;
                }
            }
        }

        & > div:first-child {
            max-width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        &:hover {
            box-shadow: $drop-shadow;
        }

        &:hover,
        &:focus {
            .set-input--remove {
                color: rgba($-light, 0.75);
            }
        }

        &:active {
            .set-input--remove {
                color: rgba($-light, 0.95);
            }
        }

        .icon {
            position: relative;
            top: -2px;
        }
    }

    &--remove {
        @include transitions("color");
        padding: 0 0.25rem 0 0.5rem;

        color: rgba($-light, 0.4);
        box-shadow: none !important;

        @include dark {
            color: rgba($-light, 0.25);
        }
    }
}

.btn-input-control {
    @include light {
        background-color: rgba($dark-000, 0.075);
        color: rgba($-dark, 0.7) !important;
        border-top: 1px solid #ced4da;
        border-bottom: 1px solid #ced4da;

        &:hover:not(:disabled) {
            color: $-dark !important;
            background-color: rgba($dark-000, 0.125);
        }

        &:active:not(:disabled) {
            color: $-dark !important;
            background-color: rgba($dark-000, 0.15);
        }

        &:focus {
            @include highlight-shadow($-dark, 0.125);

            &:active {
                @include highlight-active-shadow(
                    $-dark,
                    0.125,
                    $important: true
                );
            }
        }
    }

    @include dark {
        background-color: rgba($light-400, 0.05);
        color: rgba($-light, 0.7) !important;

        &:hover:not(:disabled) {
            color: $-light !important;
            background-color: rgba($light-400, 0.1);
        }

        &:active:not(:disabled) {
            color: $-light !important;
            background-color: rgba($light-400, 0.125);
        }

        &:focus {
            @include highlight-shadow($-light, 0.125);

            &:active {
                @include highlight-active-shadow(
                    $-light,
                    0.125,
                    $important: true
                );
            }
        }
    }

    &:last-child {
        margin-left: 0 !important;
        position: relative;

        @include light {
            border-right: 1px solid #ced4da;

            &::after {
                background-color: $-dark;
            }
        }

        &::after {
            position: absolute;
            content: " ";
            top: 4px;
            bottom: 4px;
            left: -2px;
            width: 2px;
            opacity: 0.175;
            background-color: $-light;
        }
    }

    .icon {
        position: relative;
        top: -2px;
    }
}

.credit-card-display {
    &--icon {
        svg {
            position: relative;
            width: auto;
            height: 2rem;
        }
    }

    &--text {
        margin-left: 0.5rem;
    }
}

$secondary-nav-breakpoint: sm;
.secondary-nav {
    $this: &;
    @include dark-bg($-primary, -25%);
    @include light-bg($-primary, 15%);
    @include dark-border(transparent);
    @include light-border(rgba($-primary, 0.8), -20%, $side: top);

    position: relative;
    z-index: 1;
    box-shadow: $drop-shadow;
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;

    @include respond-below($secondary-nav-breakpoint) {
        background-color: transparent !important;
        border: none !important;
        box-shadow: none !important;
        padding-top: 1rem !important;
        padding-left: 1rem !important;
    }
}

.back-button {
    $this: &;

    @mixin primary-style {
        color: $-light;
        background-color: color-adjust($-primary, 10%);

        &:hover {
            background-color: color-adjust($-primary, 15%);
        }

        &:active {
            background-color: color-adjust($-primary, 20%) !important;
        }
    }

    @mixin light-style {
        color: $-dark;
    }

    &.responsive {
        @include respond-above($secondary-nav-breakpoint) {
            @include light {
                @include light-style;
            }

            @include dark {
                @include primary-style;
            }
        }

        @include respond-below($secondary-nav-breakpoint) {
            @include light {
                @include primary-style;

                #{$this}--text {
                    opacity: 1 !important;
                }
            }
        }
    }

    &.primary {
        color: $-light !important;
        #{$this}--text {
            opacity: 1 !important;
        }
    }

    &:not(.responsive) {
        @include light {
            @include light-style;
        }

        @include dark {
            @include primary-style;
        }
    }

    &:hover {
        #{$this}--text {
            opacity: 1;
        }
    }

    color: $-light;

    &--text {
        margin-left: 0.75rem;
        opacity: 0.8;
    }
}
