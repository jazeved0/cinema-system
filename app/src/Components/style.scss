@import "../scss/util";
@import "../scss/theme";
@import "../scss/media";
@import "../scss/app";
@import "../scss/colors";
@import "../scss/fonts";

.nav {
    padding-left: 1rem !important;
}

.layout {
    &--nav {
        @include dark(box-shadow, $drop-shadow);
        position: relative;

        // Above modal
        z-index: 1051 !important;

        .right-buttons {
            display: flex;
            flex-direction: row;
            align-items: stretch;
            justify-content: flex-end;

            margin-left: auto;
        }

        .brand {
            $collapse-breakpoint: 400px;

            @include transitions("background-color, box-shadow");
            display: flex;
            flex-direction: row;
            align-items: center;
            border-radius: 0.35rem;
            color: rgba($-light, 0.8) !important;
            margin-left: -0.4rem;
            margin-right: -0.4rem;

            .brand--icon {
                font-size: 2.2rem;
                color: $-light;
                top: -6px;

                @include respond-below(md) {
                    font-size: 1.8rem;
                }

                @media (max-width: $collapse-breakpoint) {
                    font-size: 1.6rem;
                }
            }

            .brand--text {
                @include transitions("color");
                margin-bottom: 0;
                margin-top: 0;
                margin-left: 1rem;
                font-size: 1.1em;
                font-weight: 400;
                color: inherit;

                @media (max-width: $collapse-breakpoint) {
                    display: none;
                }
            }

            &:hover {
                color: $-light !important;
                background-color: rgba($-dark, 0.1);
                box-shadow: $drop-shadow-inner;
            }
        }

        a:not(.dropdown-item),
        button {
            @extend %button-blank;

            font-size: 1.5rem;
            @include transitions("color");
            color: rgba(white, 0.4);

            &:hover,
            &:active {
                color: white;
            }

            padding-left: 0.6rem;
            padding-right: 0.6rem;

            span {
                position: relative;
                top: -2px;
            }
        }

        .nav-divider {
            border-left: 2px solid rgba($-light, 0.25);
            margin-left: 0.5rem;
            margin-right: 0.5rem;
            margin-top: 0.2rem;
            margin-bottom: 0.2rem;

            @include respond-below(xs) {
                display: none;
            }
        }
    }
}

.cta-button.cta-button {
    @include transitions((box-shadow, background-color));
    $this: ".cta-button";

    border-radius: 768px;
    padding: 0.3em 1.5em 0.5em;
    font-size: 1.5em;
    cursor: pointer;
    user-select: none;

    @include respond-below(md) {
        font-size: 1.2em !important;
    }

    #{$this}--content {
        display: inline-flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        justify-content: center;
    }

    #{$this}--icon {
        margin-left: 1rem;
    }

    &#{$this}__animated {
        #{$this}--icon {
            @include transitions((margin-left, margin-right, opacity, width));
            opacity: 1;
            width: 0;
        }

        &:not(:hover) {
            #{$this}--icon {
                margin-left: 0 !important;
                margin-right: 0 !important;
                width: 0 !important;
                opacity: 0;
                overflow: hidden;
            }
        }
    }

    &#{$this}__reversed {
        flex-direction: row-reverse;

        #{$this}--icon {
            margin-left: 0;
            margin-right: 1rem;
        }
    }

    &#{$this}__glowing {
        @each $name, $color in $theme-colors {
            $base-drop-shadow: 0 6px 16px rgba($color, 0.3);

            &.btn-#{$name} {
                box-shadow: $base-drop-shadow;

                &:not(:disabled):not(.disabled):focus {
                    box-shadow: highlight-shadow-value($color, 0.2),
                        $base-drop-shadow;
                }

                &:not(:disabled):not(.disabled):active {
                    box-shadow: highlight-shadow-value($color, 0.2),
                        inset 0 3px 5px rgba(0, 0, 0, 0.125), $base-drop-shadow;
                }
            }
        }
    }
}

.lead {
    margin-bottom: 2rem;
}

._form {
    $this: &;
    #{$this}--buttons {
        display: flex;
        flex-direction: row;
        justify-content: flex-end;
        margin-top: 0.75rem;

        .btn {
            padding-left: 1.5rem;
            padding-right: 1.5rem;
            flex-grow: 1;
            flex-shrink: 1;
            max-width: 150px;

            &:not(:last-child) {
                margin-right: 1.25rem;
            }
        }

        &#{$this}--buttons__reverse {
            flex-direction: row-reverse;
            justify-content: flex-start;

            .btn {
                margin-right: 0;

                &:not(:last-child) {
                    margin-left: 1.25rem;
                }
            }
        }

        #{$this}--submit-button {
            #{$this}--submit-button-spinner {
                @include transitions((width, opacity, margin-left));
                margin-left: 0;
                opacity: 0;
                position: relative;
                top: -1px;
                display: inline-block;
                width: 0;
            }

            &#{$this}--submit-button__loading {
                cursor: not-allowed;

                #{$this}--submit-button-spinner {
                    opacity: 1;
                    margin-left: 0.75rem;
                    width: 1rem;
                }
            }
        }
    }

    &:not(.horizontal) {
        @include respond-above(xs) {
            .form-group {
                margin-bottom: 0 !important;
            }

            .form-row {
                margin-bottom: 1rem;

                &:last-child {
                    margin-bottom: 0 !important;
                }
            }
        }
    }
}

.input-group {
    .input-group-text {
        @include dark-fg;
        @include dark-bg($dark-250);
        @include dark {
            border-color: $dark-400;
            border-width: 0;
            position: relative;
        }
    }
}

.input-group-prepend {
    .input-group-text {
        @include dark {
            border-right-width: 0.25rem;
        }
    }

    & > .form-control:not(:last-child),
    & > .custom-select:not(:last-child) {
        border-bottom-right-radius: 8px;
        border-top-right-radius: 8px;
    }
}

.input-group-append {
    .input-group-text {
        @include dark {
            border-left-width: 0.25rem;
        }
    }

    & > .form-control:not(:last-child),
    & > .custom-select:not(:last-child) {
        border-bottom-right-radius: 8px;
        border-top-right-radius: 8px;
    }
}

.combo-input {
    $this: ".combo-input";

    input {
        cursor: text;
        box-shadow: none !important;
    }

    &__control {
        border-radius: 8px !important;
        transition: box-shadow 0.25s ease !important;
        box-shadow: none;
        cursor: pointer !important;

        @include dark {
            background-color: blend($dark-000, $dark-400, 0.575) !important;
            color: $-light !important;
            border-color: transparent !important;
        }

        @include light {
            border-color: $input-border-color !important;
            background-color: white !important;
            color: $-dark !important;

            &:focus-within {
                border-color: $active-input-border-color;
            }
        }

        &:focus-within {
            @include highlight-shadow($-primary);
        }

        &#{$this}__control--menu-is-open {
            #{$this}__indicator {
                @include dark-fg(rgba($-light, 0.9));
            }
        }
    }

    &--is-disabled {
        pointer-events: initial !important;

        #{$this}__control {
            cursor: not-allowed !important;

            @include dark {
                background-color: blend($dark-000, $dark-400, 0.8) !important;
                color: rgba($-light, 0.8) !important;
                border-color: $dark-200;
            }

            @include light {
                background-color: $light-400 !important;
                color: rgba($-dark, 0.8) !important;
            }
        }
    }

    &.is-invalid {
        #{$this}__control {
            border-color: $-danger !important;

            &:focus-within {
                @include highlight-shadow($-danger);
            }
        }
    }

    &.is-valid {
        #{$this}__control {
            border-color: $-success !important;

            &:focus-within {
                @include highlight-shadow($-success);
            }
        }
    }

    &.is-invalid ~ .invalid-feedback,
    &.is-invalid ~ .invalid-tooltip {
        display: block;
    }

    &__placeholder {
        @include light-fg(rgba($-dark, 0.4));
        @include dark-fg(rgba($-light, 0.4));
    }

    &__single-value {
        @include dark-fg;
    }

    &__indicator-separator {
        @include dark-bg(rgba($-light, 0.3));
    }

    &__indicator {
        @include dark-fg(rgba($-light, 0.5));
        cursor: pointer;

        &:hover {
            @include dark-fg(rgba($-light, 0.9));
        }
    }

    &__menu {
        @include dark-bg(blend($dark-000, $dark-400, 0.575));
        @include light-border($input-border-color);
        @include dark-fg;
        @include light-fg;
        border-width: 1px;
        z-index: 2 !important;
    }

    &__option {
        cursor: pointer !important;
    }

    &__option--is-selected {
        @include dark-bg(rgba($-primary, 0.8));
        @include light-bg(rgba($-primary, 0.8));
    }

    &__option--is-focused {
        @include dark-bg(rgba($-primary, 0.1));
        @include light-bg(rgba($-primary, 0.1));
    }

    &__option--is-focused#{$this}__option--is-selected {
        @include dark-bg(rgba($-primary, 0.9));
        @include light-bg(rgba($-primary, 0.9));
    }

    &__option:active {
        @include dark-bg(rgba($-primary, 1));
        @include light-bg(rgba($-primary, 1));
    }
}

.card {
    @include dark-bg($dark-350);
    @include light-bg($light-450);

    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: $drop-shadow;
}

.set-input {
    $this: &;
    @include transitions("box-shadow");

    border-radius: 8px;
    border: 1px solid rgba(#ced4da, 0.5);

    @include light {
        &.disabled {
            color: rgba($-dark, 0.8) !important;
        }
    }

    @include dark {
        border-color: transparent;

        &.disabled {
            color: rgba($-light, 0.8) !important;
            border-color: $dark-200;
            cursor: not-allowed;
        }
    }

    &.disabled {
        #{$this}--item {
            opacity: 0.6;
            pointer-events: none;
        }

        #{$this}--add {
            opacity: 0.6;
            pointer-events: none;
            cursor: not-allowed;
        }
    }

    &--items-pane {
        position: relative;
        min-height: 38px;
        padding: 0.5rem 0.5rem 0.05rem;
        display: flex;
        flex-wrap: wrap;

        border-bottom: 1px solid rgba(#ced4da, 0.5);
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;

        @include light {
            background-color: $light-350 !important;
            color: $-dark;
        }

        @include dark {
            background-color: color-adjust($-dark, 2%) !important;
            border-color: rgba($light-400, 0.1);
            color: $-light;
        }
    }

    &--input {
        display: flex;
        flex-direction: row;
        position: relative;

        .auto-complete-input {
            &:not(.is-valid):not(.is-invalid) {
                .react-autosuggest__suggestions-container {
                    &::after {
                        border: none !important;
                    }
                }
            }

            .react-autosuggest__suggestions-container {
                &::after {
                    // top: -36px !important;
                    border-top-right-radius: 0 !important;
                    border-top-left-radius: 0 !important;
                }

                &:not(.react-autosuggest__suggestions-container--open)::after {
                    border-bottom-right-radius: 0 !important;
                }
            }
        }

        input {
            border-radius: 0 !important;
            border-bottom-left-radius: 8px !important;

            &.form-control:not(.is-valid):not(.is-invalid) {
                border: none !important;
            }
        }

        button {
            border-radius: 0;
            border-bottom-right-radius: 8px;
            border-right: none !important;
            border-top: none !important;
            border-bottom: none !important;
            flex-grow: 0;

            &::after {
                display: none !important;
            }
        }

        & > :not(button) {
            flex-grow: 1;
        }
    }

    &--item {
        @include transitions("box-shadow, transform");
        @extend %button-blank;
        $this: &;

        display: inline-flex;
        position: relative;
        flex-direction: row;
        align-items: center;
        padding: 0.25rem 0.25rem 0.25rem 0.5rem;
        margin-bottom: 0.5rem;
        margin-right: 0.5rem;
        max-width: 100%;

        border-radius: 6px;
        color: $-light;
        background-color: $-primary !important;
        cursor: pointer;
        will-change: transform;
        transform: none;

        @include light {
            &:focus {
                box-shadow: highlight-shadow-value($-primary) !important;

                &:hover {
                    box-shadow: highlight-shadow-value($-primary), $drop-shadow !important;
                }
            }
        }

        @include dark {
            background-color: rgba($-light, 0.1) !important;

            &:focus {
                box-shadow: highlight-shadow-value($-light) !important;

                &:hover {
                    box-shadow: highlight-shadow-value($-light), $drop-shadow !important;
                }
            }
        }

        & > div:first-child {
            max-width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        &:hover {
            box-shadow: $drop-shadow;
        }

        &:hover,
        &:focus {
            .set-input--remove {
                color: rgba($-light, 0.75);
            }
        }

        &:active {
            .set-input--remove {
                color: rgba($-light, 0.95);
            }
        }

        .icon {
            position: relative;
            top: -2px;
        }
    }

    &--remove {
        @include transitions("color");
        padding: 0 0.25rem 0 0.5rem;

        color: rgba($-light, 0.4);
        box-shadow: none !important;

        @include dark {
            color: rgba($-light, 0.25);
        }
    }
}

.btn-input-control {
    @include light {
        background-color: rgba($dark-000, 0.075);
        color: rgba($-dark, 0.7) !important;
        border-top: 1px solid #ced4da;
        border-bottom: 1px solid #ced4da;

        &:hover:not(:disabled) {
            color: $-dark !important;
            background-color: rgba($dark-000, 0.125);
        }

        &:active:not(:disabled) {
            color: $-dark !important;
            background-color: rgba($dark-000, 0.15);
        }

        &:focus {
            @include highlight-shadow($-dark, 0.125);

            &:active {
                @include highlight-active-shadow(
                    $-dark,
                    0.125,
                    $important: true
                );
            }
        }
    }

    @include dark {
        background-color: rgba($light-400, 0.05);
        color: rgba($-light, 0.7) !important;

        &:hover:not(:disabled) {
            color: $-light !important;
            background-color: rgba($light-400, 0.1);
        }

        &:active:not(:disabled) {
            color: $-light !important;
            background-color: rgba($light-400, 0.125);
        }

        &:focus {
            @include highlight-shadow($-light, 0.125);

            &:active {
                @include highlight-active-shadow(
                    $-light,
                    0.125,
                    $important: true
                );
            }
        }
    }

    &:last-child {
        margin-left: 0 !important;
        position: relative;

        @include light {
            border-right: 1px solid #ced4da;

            &::after {
                background-color: $-dark;
            }
        }

        &::after {
            position: absolute;
            content: " ";
            top: 4px;
            bottom: 4px;
            left: -2px;
            width: 2px;
            opacity: 0.175;
            background-color: $-light;
        }
    }

    .icon {
        position: relative;
        top: -2px;
    }
}

.credit-card-display {
    &--icon {
        svg {
            position: relative;
            width: auto;
            height: 2rem;
        }
    }

    &--text {
        margin-left: 0.5rem;
    }
}

$secondary-nav-breakpoint: sm;
.secondary-nav {
    $this: &;
    @include dark-bg($-primary, -25%);
    @include light-bg($-primary, 15%);
    @include dark-border(transparent);
    @include light-border(rgba($-primary, 0.8), -20%, $side: top);

    position: relative;
    z-index: 1;
    box-shadow: $drop-shadow;
    padding-top: 1rem !important;
    padding-bottom: 1rem !important;

    @include respond-below($secondary-nav-breakpoint) {
        background-color: transparent !important;
        border: none !important;
        box-shadow: none !important;
        padding-top: 1rem !important;
        padding-left: 1rem !important;
    }
}

.back-button {
    $this: &;

    @mixin primary-style {
        color: $-light;
        background-color: color-adjust($-primary, 10%);

        &:hover {
            background-color: color-adjust($-primary, 15%);
        }

        &:active {
            background-color: color-adjust($-primary, 20%) !important;
        }
    }

    @mixin light-style {
        color: $-dark;
    }

    &.responsive {
        @include respond-above($secondary-nav-breakpoint) {
            @include light {
                @include light-style;
            }

            @include dark {
                @include primary-style;
            }
        }

        @include respond-below($secondary-nav-breakpoint) {
            @include light {
                @include primary-style;

                #{$this}--text {
                    opacity: 1 !important;
                }
            }
        }
    }

    &.primary {
        color: $-light !important;
        #{$this}--text {
            opacity: 1 !important;
        }
    }

    &:not(.responsive) {
        @include light {
            @include light-style;
        }

        @include dark {
            @include primary-style;
        }
    }

    &:hover {
        #{$this}--text {
            opacity: 1;
        }
    }

    color: $-light;

    &--text {
        margin-left: 0.75rem;
        opacity: 0.8;
    }
}

.menu {
    $outside-spacing: 0.35rem;
    $spacing: 1rem;
    $negative-space: 1.5rem - $spacing;

    display: flex;
    flex-wrap: wrap;

    margin: ($outside-spacing - $negative-space)
        ($outside-spacing - ($spacing + $negative-space))
        ($outside-spacing - ($spacing + $negative-space))
        ($outside-spacing - $negative-space);

    .btn {
        display: block;
        margin-bottom: $spacing;
        margin-right: $spacing;
        padding-top: 0.75rem;
        padding-bottom: 0.75rem;
    }

    & > div {
        padding: 0 !important;
    }
}

.session-button {
    font-size: 1.15rem !important;
    line-height: 0 !important;
    font-weight: 500 !important;
    display: flex !important;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    padding-right: 0.75rem !important;

    & > span {
        display: block;
        top: 0 !important;
    }

    @include respond-below(md) {
        &__at,
        &__username {
            display: none !important;
        }
    }

    &__at {
        opacity: 0.5;
        margin-right: 0.25rem;
    }

    &__username {
        margin-right: 1rem;
    }

    &__icon {
        color: $-light !important;
    }

    &__logout-icon {
        margin-right: 0.5rem;
        position: relative;
        top: -2px;
    }

    &::after {
        content: none !important;
    }
}

.notification {
    @mixin notification-variant($color, $icon) {
        @include light {
            $base: blend($color, $-light, 0.2);
            background-color: $base;
            background-image: $icon;

            &.notification-toast {
                &:hover {
                    background-color: lighten($base, 5%);
                }
            }
        }

        @include dark {
            $base: desaturate(blend($color, $-dark, 0.2), 15%);
            background-color: $base;
            background-image: $icon;

            &.notification-toast {
                &:hover {
                    background-color: lighten($base, 5%);
                }
            }
        }
    }

    @extend %button-blank;
    @include transitions(
        "transform, opacity, background-color, max-height, \
        margin-bottom, padding-top, padding-bottom, box-shadow"
    );

    position: relative;

    display: block;
    width: 100%;
    margin-bottom: 12px;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;

    box-shadow: $drop-shadow-0;
    color: $-light;
    background-color: rgba($dark-000, 0.65);
    background-size: 60px 60px;
    background-position: left -12px bottom -12px;
    background-repeat: no-repeat;

    .notification-content {
        margin-bottom: 0;
        overflow-wrap: break-word;
        word-wrap: break-word;
        hyphens: auto;
        border-radius: 4px;
    }

    .close {
        @extend %close-dark;

        position: absolute;
        right: 10px;
    }

    &:last-child {
        margin-bottom: 1rem;
    }

    &.notification-alert {
        padding-left: 0.75rem;
        padding-right: 2.75rem;
        border-radius: 6px;

        .close {
            top: 6px;
            pointer-events: all;
        }
    }

    &.notification-toast {
        display: inline-block;
        padding-left: 0.75rem;
        padding-right: 2.5rem;

        cursor: pointer;
        user-select: none;
        border-radius: 4px;

        .close {
            top: 50%;
            transform: translateY(calc(-50% - 2px));
            pointer-events: none;
        }

        @include respond-below(md) {
            padding: 0.5rem 0.75rem;

            .close {
                display: none;
            }
        }

        &:hover {
            transform: translateY(-1px);
            box-shadow: $drop-shadow-1;
        }
    }

    // Notification variants

    &.info {
        // assets/info.svg
        @include notification-variant(
            $dark-400,
            url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3E%3Cpath style='fill: white; opacity: 0.1' d='M14.1,0.2C7.6-1,1.4,3.3,0.2,9.9s3.2,12.8,9.7,13.9c6.5,1.2,12.8-3.2,13.9-9.7C25,7.6,20.7,1.4,14.1,0.2z M8.5,16.5 c1.1-2.1,2.9-4.5,3.2-5.1c0.5-0.9,0-1.4-2.2-0.1l-0.3-0.9c2.6-1.9,7.1-1.7,4.9,1.7c-1.3,2.1-2.3,3.5-2.9,4.6 c-0.9,1.6,0.7,1.2,2.3,0.1c0.1,0.3,0.2,0.5,0.3,0.8C10.3,20,6.8,19.7,8.5,16.5z M16.1,7.5c-0.8,0.4-1.7,0.3-2.2-0.4 c-0.4-0.7-0.2-1.6,0.6-2c0.8-0.4,1.7-0.2,2.2,0.4C17.2,6.2,16.9,7.1,16.1,7.5z'/%3E%3C/svg%3E%0A")
        );
    }

    &.success {
        // assets/success.svg
        @include notification-variant(
            darken($-success, 20%),
            url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 22' style='enable-background:new 0 0 24 22;' xml:space='preserve'%3E%3Cpath style='fill: white; opacity: 0.2' d='M21.9,9.3C21.9,9.9,22,10.4,22,11c0,6.1-4.9,11-11,11S0,17.1,0,11S4.9,0,11,0c2.3,0,4.5,0.7,6.3,2l-1.4,1.5 C14.5,2.5,12.8,2,11,2c-5,0-9,4-9,9s4,9,9,9c4.9,0,8.9-3.9,9-8.8C20,11.2,21.9,9.3,21.9,9.3z M20.9,1.2l-9.4,9.6L7.7,7.2l-3.1,3.1 l6.9,6.7L24,4.3C24,4.3,20.9,1.2,20.9,1.2z'/%3E%3C/svg%3E%0A")
        );
    }

    &.warning {
        // assets/warning.svg
        @include notification-variant(
            darken($-warning, 20%),
            url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 23.1 21.5' style='enable-background:new 0 0 23.1 21.5;' xml:space='preserve'%3E%3Cpath style='fill: white; opacity: 0.2' d='M11.1,0.2L0.1,20.5c-0.2,0.4,0.1,0.9,0.6,0.9h21.7c0.5,0,0.9-0.6,0.6-1.1L12,0.2C11.8-0.1,11.3-0.1,11.1,0.2z M10.5,6.7h2.2 v7.7h-2.2V6.7z M11.6,19.1c-0.8,0-1.4-0.6-1.4-1.4s0.6-1.4,1.4-1.4c0.8,0,1.4,0.6,1.4,1.4S12.3,19.1,11.6,19.1z'/%3E%3C/svg%3E%0A")
        );
    }

    &.danger {
        // assets/danger.svg
        @include notification-variant(
            darken($-danger, 20%),
            url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3E%3Cpath style='fill: white; opacity: 0.2' d='M17,0H7L0,7V17l7,7H17l7-7V7C24,7,17,0,17,0z M16.5,18.2L12,13.8l-4.4,4.5l-1.8-1.8l4.4-4.5L5.8,7.7l1.8-1.8l4.5,4.3 l4.4-4.5l1.8,1.8L13.8,12l4.5,4.4L16.5,18.2z'/%3E%3C/svg%3E%0A")
        );
    }

    // Notification transition classes

    @mixin notification-hidden {
        opacity: 0 !important;
        max-height: 0 !important;
        margin-bottom: 0 !important;
        padding-top: 0 !important;
        padding-bottom: 0 !important;

        &:last-child {
            margin-bottom: 0 !important;
        }
    }

    @mixin notification-visible {
        opacity: 1 !important;
        max-height: 400px !important;
        margin-bottom: 0.6rem !important;
        padding-top: 0.5rem !important;
        padding-bottom: 0.5rem !important;

        &:last-child {
            margin-bottom: 1rem !important;
        }
    }

    &-enter {
        @include notification-hidden;
    }

    &-enter-active {
        @include notification-visible;
    }

    &-exit {
        @include notification-visible;

        transform: none;
        pointer-events: none;
    }

    &-exit-active {
        @include notification-hidden;

        transform: translateX(-64px);
        pointer-events: none;
    }
}

.notification-list--transition-group {
    display: flex;
    flex-direction: column;
    height: 100%;
}

$border-color-light: rgba($-dark, 0.15);
$border-color-dark: rgba($-light, 0.15);
%header-cell-fill {
    @include light-bg($data-grid-header-light-bg);
    @include dark-bg($data-grid-header-dark-bg);
}

%base-bg {
    background-color: transparent !important;
}

%cell-base {
    @extend %base-bg;
    @include light(border-color, $border-color-light);
    @include dark(border-color, $border-color-dark);
}

input.form-control.editor-main {
    border: none;
    @include dark {
        background-color: $dark-200 !important;
        color: $-light !important;
    }
}

.data-grid {
    flex-grow: 1;
    display: flex;
    flex-direction: column;

    .loading {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 400px;

        .spinner-border {
            width: 2.5rem;
            height: 2.5rem;
        }
    }
}

.table-outer {
    height: 0;
    flex-grow: 1;
    @include light-fg;
    @include dark-fade-fg;

    // React grid meme to make full height
    .react-grid-Main {
        flex-grow: 1;
        @extend %base-bg;
        outline: none;

        .drag-handle {
            display: none !important;
        }

        .rdg-selected {
            border: none !important;
        }

        .react-grid-cell-copied {
            background-color: transparent !important;
        }
    }

    .react-grid-Container {
        height: 100%;
        position: relative;
        display: flex;
        flex-direction: column;
    }

    .react-grid-Toolbar {
        $collapse-breakpoint: md;
        flex-grow: 0;
        z-index: 2;
        background-color: transparent;
        border: none;
        padding: {
            top: 0.5rem;
            bottom: 0.5rem;
            left: 0;
            right: 0;
        }
        height: auto;

        .btn-primary {
            background-color: $-primary;
            border: none !important;
        }

        @include respond-below($collapse-breakpoint) {
            .tools {
                float: none;
                line-height: 1.5;
            }
        }

        @include respond-above($collapse-breakpoint) {
            position: absolute;
            top: -76px;
            right: 0;
        }

        .tools {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            align-items: center;
            justify-content: flex-end;

            .controls {
                margin-right: 1rem;
                position: relative;

                .control-spacing {
                    margin-right: 1rem;
                    @include respond-above(xs) {
                        margin-right: 2.5rem;
                    }
                }
            }

            & > div {
                margin-top: 0.5rem;
                margin-bottom: 0.5rem;
            }
        }

        button {
            display: inline-block;
            font-weight: normal;
            color: $-light;
            text-align: center;
            vertical-align: middle;
            user-select: none;
            border: 1px solid transparent;
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            border-radius: 8px;
            transition: color 0.15s ease-in-out,
                background-color 0.15s ease-in-out,
                border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            position: relative;
            top: -1px;
            outline: none;
        }
    }

    .react-grid-Grid {
        min-height: 100% !important;
        @extend %base-bg;
        border: none;
        overflow: unset !important;
    }

    .react-grid-Canvas {
        height: 100% !important;
        @extend %custom-scrollbar-alt;
        height: 982px;
        z-index: 1;
        background-color: transparent;
    }

    .react-grid-Viewport {
        @extend %base-bg;
        overflow: unset !important;
        position: relative;

        &:after {
            position: absolute;
            z-index: 3;
            top: 0;
            bottom: 0;
            left: 0;
            right: 16px;
            content: " ";
            box-shadow: inset 0 14px 6px -7px rgba(black, 0.03),
                inset 0 -14px 6px -7px rgba(black, 0.05);
            overflow: hidden;
            pointer-events: none;
        }

        &::before {
            content: " ";
            position: absolute;
            @include dark-bg($dark-100);
            @include light-bg($light-300);
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
        }
    }

    .react-grid-Header {
        @extend %base-bg;
        box-shadow: none;
        position: relative;
        @include light {
            border: top;
        }

        &::before {
            content: " ";
            top: 0;
            bottom: 0;
            left: 0;
            display: block;
            height: 100%;
            width: calc(100% - 1.1rem);
            box-shadow: $drop-shadow;
        }
    }

    .react-grid-HeaderRow {
        @extend %header-cell-fill;
        margin-top: -1px;
        min-height: 0 !important;
        overflow-y: hidden !important;

        &:first-child {
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;

            .react-grid-HeaderCell {
                & > div {
                    padding: {
                        top: 10px;
                        bottom: 6px;
                        left: 10px;
                        right: 8px;
                    }
                    position: relative;
                }
            }
        }

        &:last-child {
            @include light-border($border-color-light, $side: bottom);
            @include dark-border($border-color-dark, $side: bottom);
        }
    }

    .react-grid-HeaderCell {
        font-weight: 500;
        padding: 0;
        @extend %cell-base;
        border-right: none;
        border-bottom: none;

        & > div {
            height: 100%;

            .form-group {
                height: 100%;
                display: flex;
                align-items: center;
                justify-content: flex-start;
                padding: {
                    right: 10px;
                    left: 10px;
                    top: 4px;
                    bottom: 14px;
                }
            }

            .combo-input {
                width: 100%;
                z-index: 2;
                position: relative;

                &__control {
                    border-radius: 8px;

                    @include dark {
                        &.combo-input__control--is-focused {
                            @include highlight-shadow($-primary, 0.4);
                        }
                        background-color: color-adjust($-dark, 10%) !important;
                    }
                }
            }

            .input-sm {
                height: 100%;
                display: flex;
                flex-direction: row;
                align-items: center;
                justify-content: flex-end;

                .badge {
                    margin-right: 1rem;
                }
            }
        }

        &:first-child {
            & > div {
                .form-group {
                    padding-left: 0;
                }
                padding-left: 12px;
            }
        }

        &:last-child {
            & > div {
                .form-group {
                    padding-right: 12px;
                }
            }
        }

        .react-grid-HeaderCell-sortable {
            &::after {
                $height: 3px;
                position: absolute;
                z-index: 0;
                content: " ";
                z-index: 1;
                top: 0;
                left: 0;
                right: 0;
                height: $height;
                @include dark-bg($-primary);
                @include light-bg($-primary, 20%);
                transform: translateY(-#{$height + 1px});
                @include transitions(transform);
            }

            &:hover {
                @include dark-bg($data-grid-header-hover-dark-bg);
                @include light-bg($data-grid-header-hover-light-bg);

                &::after {
                    transform: translateY(0);
                }
            }
        }

        .pull-right {
            margin-left: 4px;
            margin-right: 10px;
            opacity: 0.35;

            &:empty {
                margin-right: 0;
            }
        }

        &:last-child {
            border-right: none;
        }
    }

    .react-grid-Cell {
        @extend %cell-base;
        border-right: none;
        border-bottom: none;

        &:first-child {
            padding-left: 12px;
        }

        .rdg-cell-action {
            display: none;

            .rdg-cell-action-button {
                margin-left: 0.35rem;
                margin-right: 0.5rem;
                cursor: pointer;
                color: $-primary;
                width: 24px;

                &:hover {
                    color: color-adjust($-primary, -12.5%);
                }
            }
        }

        .author-display {
            display: flex;
            flex-direction: row;
            overflow: hidden;
            align-items: center;

            .avatar {
                margin-right: 0.5rem;
            }

            .name {
                font-weight: 500;
                opacity: 0.9;
            }

            .discriminator {
                margin-left: 0.1rem;
                font-size: 0.85em;
                opacity: 0.6;
            }
        }

        .trigger,
        .response {
            font-family: $font-family-monospace;
            font-size: 0.9em;
        }
    }

    .react-grid-Row {
        &:hover {
            @include light(background-color, rgba($-primary, 0.15));
            @include dark(background-color, rgba($-primary, 0.15));

            .rdg-cell-action {
                display: block;
            }
        }
    }

    .row-even {
        @include light-bg(rgba(0, 0, 0, 0.05));
        @include dark-bg(rgba(0, 0, 0, 0.08));
    }

    .react-grid-Empty {
        .empty-placeholder {
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 300px;

            .spinner-border {
                width: 2.5rem;
                height: 2.5rem;
            }

            .empty-label {
                padding: 1rem 1.35rem;
                @include dark-bg($data-grid-placeholder-dark-bg);
                @include light-bg($data-grid-placeholder-light-bg);
                border-radius: 80rem;
            }
        }
    }

    input[type="text"] {
        @include dark {
            &:focus {
                @include highlight-shadow($-primary, 0.4);
            }
            background-color: color-adjust($-dark, 10%) !important;
        }
    }
}

.view-mode-toolbar {
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    margin-right: 0.5rem;

    @include respond-above(md) {
        margin-right: 1rem;
    }

    &--button {
        @extend %button-blank;
        padding: 0.45rem 0.4rem 0.65rem !important;
        top: 0 !important;

        @include light {
            color: $-dark !important;
        }

        &:not(.active) {
            opacity: 0.5;
        }

        &.active {
            @include light {
                background-color: rgba($-dark, 0.1);
            }

            @include dark {
                background-color: rgba($-light, 0.1);
            }
        }
    }
}

.help-tooltip {
    width: 1.5em;
    display: inline-block;
    position: relative;
    cursor: help;
    opacity: 0.55;
    font-size: 1.3em;
}

.switch {
    .react-switch {
        vertical-align: -6px;
    }

    .label {
        margin-left: 0.75rem;
    }

    .switch-icon {
        position: relative;
        top: 2px;
        left: 6px;
        color: white;
    }
}

.placeholder {
    $dark-color: rgba($-dark, 0.1);
    $dark-highlight-color: rgba($-dark, 0.2);

    $light-color: rgba($-light, 0.15);
    $light-highlight-color: rgba($-light, 0.3);

    display: block;
    animation: shimmer 3s linear infinite;
    background-image: linear-gradient(
        to right,
        $dark-color 4%,
        $dark-highlight-color 25%,
        $dark-color 36%
    );
    background-size: 1000px 100%;

    &.inline {
        display: inline-block;
    }

    &.circle {
        border-radius: 200rem;
    }

    &.light {
        background-image: linear-gradient(
            to right,
            $light-color 4%,
            $light-highlight-color 25%,
            $light-color 36%
        );
    }

    &.placeholder-auto {
        @include dark(opacity, 0.4);
        @include dark(
            background-image,
            linear-gradient(
                to right,
                $light-color 4%,
                $light-highlight-color 25%,
                $light-color 36%
            )
        );
    }
}

.add-row-modal {
    .modal-header {
        .h4 {
            margin-bottom: 0;
            line-height: 1.15;
        }
    }

    .modal-body {
        padding-left: 2rem;
        padding-right: 2rem;
    }
}

.notification-pane {
    $header-offset: 64px;
    $screen-padding: 12px;
    $layout-breakpoint: sm;
    $full-vertical-position: $header-offset + 77px + $screen-padding;

    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    z-index: 1600;
    pointer-events: none;

    .notification {
        pointer-events: all;
    }

    &--toast {
        position: absolute;

        height: 400px;
        max-width: 350px;
        padding: $screen-padding;

        .notification-toast {
            width: auto !important;
        }

        @include respond-above($layout-breakpoint) {
            right: 0;
            top: $full-vertical-position;

            .notification-list--transition-group {
                align-items: flex-end;
                justify-content: flex-start;
            }
        }

        @include respond-below($layout-breakpoint) {
            right: 0;
            bottom: 0;
            left: 0;

            max-width: none;

            .notification-list--transition-group {
                align-items: stretch;
                justify-content: flex-end;
            }

            .notification-toast:last-child {
                margin-bottom: 0 !important;
            }
        }
    }

    &--alert {
        position: absolute;
        left: 0;
        right: 0;

        padding: $screen-padding 0;
        margin: 0 auto;
        height: 400px;
        max-width: 800px;

        .container {
            height: 100%;
        }

        .notification-list--transition-group {
            align-items: stretch;
        }

        @include respond-above($layout-breakpoint) {
            top: $full-vertical-position;
        }

        @include respond-below($layout-breakpoint) {
            top: $header-offset;
        }
    }
}

.company-detail {
    &__row {
        margin-bottom: 0.5rem;
    }

    &__row-label {
        font-weight: 500;
        margin-right: 1rem;
    }

    &__row-value {
        .placeholder {
            vertical-align: bottom;
        }
    }

    &__theaters {
        margin-top: 2.5rem;
        min-height: 420px;
        display: flex;
        flex-direction: column;

        .data-grid {
            flex-grow: 1;
        }
    }
}

@mixin status-state($color) {
    .btn-input-control {
        border: 1px solid $color;

        &:first-child {
            border-right: none;
        }

        &:last-child {
            border-left: none;
        }

        @include light {
            background-color: rgba($color, 0.075);
        }

        @include dark {
            background-color: rgba($color, 0.125);
        }

        &:focus {
            @include highlight-shadow($color);

            &:active {
                @include highlight-active-shadow($color, $important: true);
            }
        }
    }
}

.numeric-up-down {
    &.is-invalid .input-group-append {
        @include status-state($-danger);
    }

    &.is-valid .input-group-append {
        @include status-state($-success);
    }

    &.disabled {
        .input-group-append button {
            cursor: not-allowed !important;
        }
    }

    input {
        border-top-right-radius: 0 !important;
        border-bottom-right-radius: 0 !important;
    }

    &.is-invalid ~ .invalid-feedback,
    &.is-invalid ~ .invalid-tooltip {
        display: block;
    }
}

.date-picker {
    display: flex;
    flex-direction: row;

    .react-datepicker-wrapper {
        flex-grow: 1;
    }

    .react-datepicker__input-container,
    input {
        width: 100%;
        border-top-right-radius: 0 !important;
        border-bottom-right-radius: 0 !important;
    }

    .icon {
        position: relative;
        top: -3px;
    }

    &.is-invalid {
        input {
            border-color: $-danger !important;

            &:focus {
                @include highlight-shadow($-danger);
            }
        }
    }

    .react-datepicker__close-icon {
        &::after {
            background-color: transparent !important;
            height: 12px;
            width: 32px;
            padding: 0 2px;
            font-size: 24px;
            position: relative;
            top: -3px;
            opacity: 0.5;
            @include transitions(opacity);

            @include dark-fg;
            @include light-fg;
        }

        &:hover {
            &::after {
                opacity: 1;
            }
        }
    }
    .react-datepicker__day--selected,
    .react-datepicker__day--in-selecting-range,
    .react-datepicker__day--in-range,
    .react-datepicker__month-text--selected,
    .react-datepicker__month-text--in-selecting-range,
    .react-datepicker__month-text--in-range,
    .react-datepicker__quarter-text--selected,
    .react-datepicker__quarter-text--in-selecting-range,
    .react-datepicker__quarter-text--in-range,
    .react-datepicker__day--keyboard-selected,
    .react-datepicker__month-text--keyboard-selected,
    .react-datepicker__quarter-text--keyboard-selected {
        background-color: $-primary !important;
        color: $-light !important;
    }

    .react-datepicker {
        @include light-bg($light-450);
        @include dark-bg($dark-450);
        @include light-fg;
        @include dark-fg;
        @include dark {
            border-color: transparent;
            box-shadow: $drop-shadow;
        }
    }

    .react-datepicker__header {
        @include light-bg($light-400);
        @include dark-bg($dark-500);
        @include dark {
            border-color: transparent;
            box-shadow: $drop-shadow;
        }
    }

    .react-datepicker__triangle {
        @include light(border-bottom-color, $light-400, $important: true);
        @include dark(border-bottom-color, $dark-500, $important: true);

        &::before {
            @include dark(border-bottom-color, $dark-500, $important: true);
        }
    }

    .react-datepicker__current-month,
    .react-datepicker__day-name {
        @include light-fg;
        @include dark-fg;
    }

    .react-datepicker__day {
        @include light-fade-fg;
        @include dark-fade-fg;

        &:hover {
            @include dark-bg(rgba($dark-200, 0.5));
        }
    }

    &.is-invalid ~ .invalid-feedback,
    &.is-invalid ~ .invalid-tooltip {
        display: block;
    }
}

.date-filter {
    .date-picker:first-child {
        margin-right: 0.2rem;
        input {
            border-top-left-radius: 8px !important;
            border-bottom-left-radius: 8px !important;
            border-top-right-radius: 0 !important;
            border-bottom-right-radius: 0 !important;
        }
    }

    .date-picker:last-child {
        margin-left: 0.2rem;
        input {
            border-top-left-radius: 0 !important;
            border-bottom-left-radius: 0 !important;
            border-top-right-radius: 8px !important;
            border-bottom-right-radius: 8px !important;
        }
    }
}

.popout-filter {
    position: relative;
    top: 1px;

    button {
        padding-top: 3px;
        padding-bottom: 3px;
        &:not(:focus):not(:hover) {
            @include dark-fg($-primary, 50%);
        }
    }

    .input-group {
        flex-wrap: nowrap !important;
    }

    &__items {
        flex-grow: 1;
        flex-shrink: 1;
        flex-basis: 0;
        position: relative;
        overflow: hidden !important;

        .set-input--items-pane {
            padding: 0.1rem 0.35rem 0.15rem 0.15rem !important;
            border-top-left-radius: 8px;
            border-bottom-left-radius: 8px;
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
            border: 1px solid $input-border-color;
            border-right: none !important;
            min-height: 36px !important;
            max-height: 36px !important;
            flex-wrap: none !important;
            @include dark(border-color, transparent);
            @include dark-bg($dark-400, $important: true);
            @include light-bg($light-500, $important: true);

            overflow: hidden;
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
        }

        .set-input--item {
            margin-bottom: 0;
        }
    }

    &__items-placeholder {
        position: absolute;
        top: 0;
        left: 0.75rem;
        right: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        z-index: 1;
        font-weight: 0.5;
        user-select: none;
        pointer-events: none;
        font-weight: 400;
        opacity: 0.5;

        & > p {
            margin-bottom: 0;
        }
    }
}

.popover-filter__popover {
    @include respond-above(sm) {
        max-width: none !important;
    }
}

.address-filter {
    width: 320px;

    &__table {
        width: 100%;

        tr.form-group {
            border-bottom: 8px solid;
            border-color: transparent;
            font-size: 1rem;

            &:last-child {
                border-bottom: none;
            }
        }

        label {
            position: relative;
            top: 2px;
            cursor: text;
            margin-right: 1rem;
            @include light-fade-fg;
            @include dark-fade-fg;
        }
    }
}
